<?php
namespace app\common\entity;

use think\facade\Cache;
use think\Model;

class Config extends Model
{
    protected $table = 'config';

    protected $autoWriteTimestamp = false;

    // protected static $cacheKey = "web_system_config";

    public static function getValue($key)
    {
        $allConfig = self::getALLConfig();
        return isset($allConfig[$key]) ? $allConfig[$key] : '';
    }


    public static function getConfigValue($key)
    {
        return self::where('key',$key)->value('value');
    }

    public static function getALLConfig()
    {
        $model = new self();
        // $values = Cache::remember(self::$cacheKey, function () use ($model) {
            $list = $model->field('key,value')->select();
            $data = [];
            foreach ($list as $item) {
                $data[$item->key] = $item->value;
            }
            return $data;
        // });

        // return $values;
    }

    public static function delCache()
    {
        // Cache::rm(self::$cacheKey);
    }

    public function save($data = [], $where = [], $sequence = null)
    {
        // self::delCache();
        return parent::save($data, $where, $sequence); // TODO: Change the autogenerated stub
    }

    /**
     * 获取最高拥有魔盒数量
     */
    public function getMaxBox($level)
    {
        $product = self::where(['key' => 'rules_v'.$level.'_product'])->find();
        return explode('@', $product['value']);
    }
}